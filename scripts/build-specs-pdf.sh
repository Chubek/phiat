#!/bin/sh

# Generated by Qwen 3 Coder

# build-phiat-specs.sh - Build LaTeX specification document
# Builds docs/specs/phiat-specs.tex into _build_specs directory

set -e  # Exit on any error

# Configuration
SOURCE_DIR="$PWD/docs/specs"
SOURCE_FILE="phiat-specs.tex"
BUILD_DIR="$PWD/_build_specs"
LOG_FILE="$BUILD_DIR/build.log"

# Create build directory if it doesn't exist
mkdir -p "$BUILD_DIR"

# Check if source file exists
if [ ! -f "$SOURCE_DIR/$SOURCE_FILE" ]; then
    echo "Error: Source file '$SOURCE_DIR/$SOURCE_FILE' not found" >&2
    exit 1
fi

# Check if latexmk is available
if ! command -v latexmk >/dev/null 2>&1; then
    echo "Error: latexmk not found. Please install TeXLive or ensure it's in your PATH" >&2
    exit 1
fi

echo "Building PHiat specification document..."
echo "Source: $SOURCE_DIR/$SOURCE_FILE"
echo "Output: $BUILD_DIR"
echo "Log: $LOG_FILE"
echo ""

# Change to source directory to ensure relative paths work correctly
cd "$SOURCE_DIR"

# Build the document using latexmk with PDFLaTeX
# -pdf: Use PDFLaTeX
# -outdir: Specify output directory
# -halt-on-error: Stop on any LaTeX error
# -interaction=nonstopmode: Don't stop for user input
# -synctex=1: Generate SyncTeX data for better editor integration
# -shell-escape: Allow shell escapes (needed for some packages like minted)
echo "Running latexmk..." | tee "$LOG_FILE"
latexmk -pdf \
        -outdir="$BUILD_DIR" \
        -halt-on-error \
        -interaction=nonstopmode \
        -synctex=1 \
        -shell-escape \
        "$SOURCE_FILE" 2>&1 | tee -a "$LOG_FILE"

# Check if build was successful
if [ ${PIPESTATUS[0]} -eq 0 ]; then
    echo ""
    echo "Build completed successfully!"
    
    # Copy the final PDF to a more predictable name if needed
    if [ -f "$BUILD_DIR/phiat-specs.pdf" ]; then
        echo "Output file: $BUILD_DIR/phiat-specs.pdf"
    else
        # Find the PDF file in case the name is different
        PDF_FILE=$(find "$BUILD_DIR" -name "*.pdf" -type f | head -n 1)
        if [ -n "$PDF_FILE" ]; then
            echo "Output file: $PDF_FILE"
        fi
    fi
    
    # Show build statistics
    if [ -f "$BUILD_DIR/phiat-specs.fls" ]; then
        INPUT_FILES=$(grep "^INPUT " "$BUILD_DIR/phiat-specs.fls" | wc -l)
        OUTPUT_FILES=$(grep "^OUTPUT " "$BUILD_DIR/phiat-specs.fls" | wc -l)
        echo "Build used $INPUT_FILES input files and generated $OUTPUT_FILES output files"
    fi
else
    echo ""
    echo "Build failed! Check the log file for details: $LOG_FILE" >&2
    exit 1
fi

# Optional: Clean up auxiliary files (uncomment if desired)
# echo "Cleaning auxiliary files..." 
# latexmk -c -outdir="$BUILD_DIR" "$SOURCE_FILE" >/dev/null 2>&1 || true

echo "Build process finished."

